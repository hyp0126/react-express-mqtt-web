[{"/home/hyp0126/react-express-mqtt-web/client/src/index.js":"1","/home/hyp0126/react-express-mqtt-web/client/src/App.js":"2","/home/hyp0126/react-express-mqtt-web/client/src/reportWebVitals.js":"3","/home/hyp0126/react-express-mqtt-web/client/src/routes/Chart.js":"4","/home/hyp0126/react-express-mqtt-web/client/src/components/Navigation.js":"5","/home/hyp0126/react-express-mqtt-web/client/src/routes/Login.js":"6","/home/hyp0126/react-express-mqtt-web/client/src/routes/Guage.js":"7","/home/hyp0126/react-express-mqtt-web/client/src/routes/Logout.js":"8","/home/hyp0126/react-express-mqtt-web/client/src/components/LineChart.js":"9","/home/hyp0126/react-express-mqtt-web/client/src/components/canvasjs.react.js":"10","/home/hyp0126/react-express-mqtt-web/client/src/components/canvasjs.min.js":"11"},{"size":1018,"mtime":1610524437651,"results":"12","hashOfConfig":"13"},{"size":745,"mtime":1610524437647,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1610524437651,"results":"15","hashOfConfig":"13"},{"size":2623,"mtime":1610524437651,"results":"16","hashOfConfig":"13"},{"size":2393,"mtime":1610524437647,"results":"17","hashOfConfig":"13"},{"size":2565,"mtime":1610524437651,"results":"18","hashOfConfig":"13"},{"size":4972,"mtime":1610524437651,"results":"19","hashOfConfig":"13"},{"size":277,"mtime":1610524437651,"results":"20","hashOfConfig":"13"},{"size":2778,"mtime":1610524437647,"results":"21","hashOfConfig":"13"},{"size":1673,"mtime":1610524437651,"results":"22","hashOfConfig":"13"},{"size":479269,"mtime":1610524437651,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"2oehzj",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"27"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/hyp0126/react-express-mqtt-web/client/src/index.js",["50"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { unstable_createMuiStrictModeTheme } from '@material-ui/core/styles';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport green from '@material-ui/core/colors/green';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    },\n    secondary: {\n      main: green[500],\n    },\n  },\n});\n\n//const theme = unstable_createMuiStrictModeTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["51","52"],"/home/hyp0126/react-express-mqtt-web/client/src/App.js",["53"],"import React, { useState } from \"react\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport Chart from './routes/Chart';\nimport Guage from './routes/Guage';\nimport Login from './routes/Login';\nimport Logout from './routes/Logout';\nimport Navigation from \"./components/Navigation\";\nimport './App.css';\n\nfunction App() {\n  const token = sessionStorage.getItem('token');\n\n  if(!token) {\n    return <Login />\n  }\n\n  return (\n      <HashRouter>\n        <Navigation />\n        <Route path={[\"/\", \"/guage\"]} exact={true} component={Guage} />\n        <Route path=\"/chart\" component={Chart} />\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/logout\" component={Logout} />\n      </HashRouter>\n  );\n}\n\nexport default App;\n","/home/hyp0126/react-express-mqtt-web/client/src/reportWebVitals.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/routes/Chart.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/components/Navigation.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/routes/Login.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/routes/Guage.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/routes/Logout.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/components/LineChart.js",["54"],"import React from \"react\";\nimport CanvasJSReact from './canvasjs.react';\n\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass LineChart extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    \n    toogleDataSeries = (e) => {\n        if (typeof (e.dataSeries.visible) === \"undefined\" || e.dataSeries.visible) {\n            e.dataSeries.visible = false;\n        } else {\n            e.dataSeries.visible = true;\n        }\n        e.chart.render();\n    }\n\n    render() {\n        var tempDataPoints = [];\n        tempDataPoints[0] = [];\n        tempDataPoints[1] = [];\n        var splits;\n\n        for (var tempMsg of this.props.tempMsgs) {\n            splits = tempMsg.topic.split('/');\n            if (splits[1] === 'room1') {\n                tempDataPoints[0].push({\n                    x: new Date(tempMsg.date),\n                    y: parseFloat(tempMsg.value)\n                });\n            } else if (splits[1] === 'room2') {\n                tempDataPoints[1].push({\n                    x: new Date(tempMsg.date),\n                    y: parseFloat(tempMsg.value)\n                });\n            }\n        }\n\n        var date = new Date(this.props.tempMsgs[0].date);\n\n\t\tconst options = {\n\t\t\tanimationEnabled: true,\n\t\t\ttheme: \"light2\", // \"light1\", \"dark1\", \"dark2\"\n\t\t\ttitle:{\n\t\t\t\ttext: `Room Temperature (${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()})`\n\t\t\t},\n\t\t\taxisY: {\n                title: \"Degree\",\n                suffix: \" C\",\n                minimum: 0\n\t\t\t},\n\t\t\taxisX: {\n\t\t\t\tvalueFormatString: \"HH:mm\"\n            },\n            toolTip: {\n                shared: true\n            },\n            legend: {\n                cursor: \"pointer\",\n                verticalAlign: \"bottom\",\n                horizontalAlign: \"left\",\n                dockInsidePlotArea: true,\n                itemclick: this.toogleDataSeries\n            },\n            data: [{\n                type: \"line\",\n                showInLegend: true,\n                name: \"Room1\",\n                markerType: \"square\",\n                xValueFormatString: \"HH:mm\",\n                color: \"#F08080\",\n                yValueFormatString: \"#,##0\",\n                dataPoints: tempDataPoints[0]\n            },\n            {\n                type: \"line\",\n                showInLegend: true,\n                name: \"Room2\",\n                lineDashType: \"dash\",\n                yValueFormatString: \"#,##0\",\n                dataPoints: tempDataPoints[1]\n            }]\n\t\t}\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {options}\n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default LineChart;","/home/hyp0126/react-express-mqtt-web/client/src/components/canvasjs.react.js",[],"/home/hyp0126/react-express-mqtt-web/client/src/components/canvasjs.min.js",[],{"ruleId":"55","severity":1,"message":"56","line":6,"column":10,"nodeType":"57","messageId":"58","endLine":6,"endColumn":43},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"55","severity":1,"message":"63","line":1,"column":17,"nodeType":"57","messageId":"58","endLine":1,"endColumn":25},{"ruleId":"64","severity":1,"message":"65","line":7,"column":5,"nodeType":"66","messageId":"67","endLine":9,"endColumn":6},"no-unused-vars","'unstable_createMuiStrictModeTheme' is defined but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'useState' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]